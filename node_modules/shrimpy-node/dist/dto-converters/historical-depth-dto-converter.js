"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var decimal_dto_converter_1 = require("./decimal-dto-converter");
var date_dto_converter_1 = require("./date-dto-converter");
var HistoricalDepthItemDtoConverter = (function () {
    function HistoricalDepthItemDtoConverter() {
        this._decimalDtoConverter = new decimal_dto_converter_1.DecimalDtoConverter();
    }
    HistoricalDepthItemDtoConverter.prototype.convertFromDto = function (dto) {
        return {
            price: this._decimalDtoConverter.convertFromDto(dto.price),
            size: this._decimalDtoConverter.convertFromDto(dto.size)
        };
    };
    HistoricalDepthItemDtoConverter.prototype.convertToDto = function (model) {
        return {
            price: this._decimalDtoConverter.convertToDto(model.price),
            size: this._decimalDtoConverter.convertToDto(model.size)
        };
    };
    return HistoricalDepthItemDtoConverter;
}());
exports.HistoricalDepthItemDtoConverter = HistoricalDepthItemDtoConverter;
var HistoricalDepthDtoConverter = (function () {
    function HistoricalDepthDtoConverter() {
        this._dateDtoConverter = new date_dto_converter_1.DateDtoConverter();
        this._historicalDepthItemDtoConverter = new HistoricalDepthItemDtoConverter();
    }
    HistoricalDepthDtoConverter.prototype.convertFromDto = function (dto) {
        var _this = this;
        return dto.map(function (historicalDepthDto) {
            var historicalDepth = {
                time: _this._dateDtoConverter.convertFromDto(historicalDepthDto.time),
                bids: historicalDepthDto.bids.map(function (depthItemDto) {
                    return _this._historicalDepthItemDtoConverter.convertFromDto(depthItemDto);
                }),
                asks: historicalDepthDto.asks.map(function (depthItemDto) {
                    return _this._historicalDepthItemDtoConverter.convertFromDto(depthItemDto);
                })
            };
            return historicalDepth;
        });
    };
    HistoricalDepthDtoConverter.prototype.convertToDto = function (model) {
        var _this = this;
        return model.map(function (historicalDepth) {
            var historicalDepthDto = {
                time: _this._dateDtoConverter.convertToDto(historicalDepth.time),
                bids: historicalDepth.bids.map(function (depthItem) {
                    return _this._historicalDepthItemDtoConverter.convertToDto(depthItem);
                }),
                asks: historicalDepth.asks.map(function (depthItem) {
                    return _this._historicalDepthItemDtoConverter.convertToDto(depthItem);
                })
            };
            return historicalDepthDto;
        });
    };
    return HistoricalDepthDtoConverter;
}());
exports.HistoricalDepthDtoConverter = HistoricalDepthDtoConverter;
//# sourceMappingURL=historical-depth-dto-converter.js.map